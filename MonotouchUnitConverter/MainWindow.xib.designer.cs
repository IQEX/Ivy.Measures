// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonotouchUnitConverter {
	
	
	// Base type probably should be MonoTouch.Foundation.NSObject or subclass
	[MonoTouch.Foundation.Register("AppDelegate")]
	public partial class AppDelegate {
		
		private MonoTouch.UIKit.UIWindow __mt_window;
		
		private MonoTouch.UIKit.UITextField __mt_fromAmountEditor;
		
		private MonoTouch.UIKit.UITextField __mt_toAmountEditor;
		
		private MonoTouch.UIKit.UIPickerView __mt_quantitySelector;
		
		private MonoTouch.UIKit.UIPickerView __mt_fromUnitSelector;
		
		private MonoTouch.UIKit.UIPickerView __mt_toUnitSelector;
		
		#pragma warning disable 0169
		[MonoTouch.Foundation.Connect("window")]
		private MonoTouch.UIKit.UIWindow window {
			get {
				this.__mt_window = ((MonoTouch.UIKit.UIWindow)(this.GetNativeField("window")));
				return this.__mt_window;
			}
			set {
				this.__mt_window = value;
				this.SetNativeField("window", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("fromAmountEditor")]
		private MonoTouch.UIKit.UITextField fromAmountEditor {
			get {
				this.__mt_fromAmountEditor = ((MonoTouch.UIKit.UITextField)(this.GetNativeField("fromAmountEditor")));
				return this.__mt_fromAmountEditor;
			}
			set {
				this.__mt_fromAmountEditor = value;
				this.SetNativeField("fromAmountEditor", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("toAmountEditor")]
		private MonoTouch.UIKit.UITextField toAmountEditor {
			get {
				this.__mt_toAmountEditor = ((MonoTouch.UIKit.UITextField)(this.GetNativeField("toAmountEditor")));
				return this.__mt_toAmountEditor;
			}
			set {
				this.__mt_toAmountEditor = value;
				this.SetNativeField("toAmountEditor", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("quantitySelector")]
		private MonoTouch.UIKit.UIPickerView quantitySelector {
			get {
				this.__mt_quantitySelector = ((MonoTouch.UIKit.UIPickerView)(this.GetNativeField("quantitySelector")));
				return this.__mt_quantitySelector;
			}
			set {
				this.__mt_quantitySelector = value;
				this.SetNativeField("quantitySelector", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("fromUnitSelector")]
		private MonoTouch.UIKit.UIPickerView fromUnitSelector {
			get {
				this.__mt_fromUnitSelector = ((MonoTouch.UIKit.UIPickerView)(this.GetNativeField("fromUnitSelector")));
				return this.__mt_fromUnitSelector;
			}
			set {
				this.__mt_fromUnitSelector = value;
				this.SetNativeField("fromUnitSelector", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("toUnitSelector")]
		private MonoTouch.UIKit.UIPickerView toUnitSelector {
			get {
				this.__mt_toUnitSelector = ((MonoTouch.UIKit.UIPickerView)(this.GetNativeField("toUnitSelector")));
				return this.__mt_toUnitSelector;
			}
			set {
				this.__mt_toUnitSelector = value;
				this.SetNativeField("toUnitSelector", value);
			}
		}
	}
}
